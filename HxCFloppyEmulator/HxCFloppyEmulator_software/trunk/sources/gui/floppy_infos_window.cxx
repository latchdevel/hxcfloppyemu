// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "floppy_infos_window.h"

#include <stdint.h>
extern "C"
{
	#include "libhxcfe.h"
	#include "usb_hxcfloppyemulator.h"
}

#include "cb_floppy_infos_window.h"
#include "fl_mouse_box.h"
floppy_infos_window::floppy_infos_window() {
  { window = new Fl_Double_Window(1275, 540, "Visual Floppy disk");
    window->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(1000, 372, 275, 84, "Track / Side selection");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { track_number_slide = new Fl_Value_Slider(1006, 388, 264, 19, "Track number");
        track_number_slide->type(1);
        track_number_slide->labelsize(12);
        track_number_slide->textsize(12);
        track_number_slide->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Value_Slider* track_number_slide
      { side_number_slide = new Fl_Value_Slider(1005, 420, 265, 19, "Side number");
        side_number_slide->type(1);
        side_number_slide->labelsize(12);
        side_number_slide->textsize(12);
        side_number_slide->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Value_Slider* side_number_slide
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1000, 2, 275, 284, "Status");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { x_pos = new Fl_Output(1005, 17, 265, 15);
        x_pos->labelsize(10);
        x_pos->textsize(10);
      } // Fl_Output* x_pos
      { y_pos = new Fl_Output(1005, 33, 265, 15);
        y_pos->labelsize(10);
        y_pos->textsize(10);
      } // Fl_Output* y_pos
      { global_status = new Fl_Output(1005, 49, 265, 16);
        global_status->labelsize(10);
        global_status->textsize(10);
      } // Fl_Output* global_status
      { object_txt = new Fl_Text_Display(1005, 68, 265, 215);
        object_txt->labelsize(10);
        object_txt->textsize(10);
        object_txt->user_data((void*)(this));
      } // Fl_Text_Display* object_txt
      o->end();
    } // Fl_Group* o
    { Fl_Button* o = new Fl_Button(1158, 465, 105, 26, "OK");
      o->callback((Fl_Callback*)floppy_infos_ok, (void*)(this));
    } // Fl_Button* o
    { floppy_map_disp = new Fl_Group(0, 1, 1000, 500, "Floppy Map");
      floppy_map_disp->box(FL_ENGRAVED_FRAME);
      floppy_map_disp->labeltype(FL_EMBOSSED_LABEL);
      floppy_map_disp->labelsize(12);
      floppy_map_disp->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      floppy_map_disp->end();
    } // Fl_Group* floppy_map_disp
    { Fl_Group* o = new Fl_Group(0, 500, 1275, 41, "View");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { y_time = new Fl_Value_Slider(694, 505, 305, 20, "full y time scale (us)");
        y_time->type(5);
        y_time->labelsize(12);
        y_time->textsize(12);
        y_time->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Value_Slider* y_time
      { x_offset = new Fl_Value_Slider(45, 505, 305, 20, "x offset (% of the track len)");
        x_offset->type(5);
        x_offset->labelsize(12);
        x_offset->textsize(12);
        x_offset->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Value_Slider* x_offset
      { track_view_bt = new Fl_Round_Button(1021, 512, 110, 16, "Track view mode");
        track_view_bt->type(102);
        track_view_bt->down_box(FL_ROUND_DOWN_BOX);
        track_view_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Round_Button* track_view_bt
      { disc_view_bt = new Fl_Round_Button(1151, 512, 103, 16, "Disk view mode");
        disc_view_bt->type(102);
        disc_view_bt->down_box(FL_ROUND_DOWN_BOX);
        disc_view_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Round_Button* disc_view_bt
      { x_time = new Fl_Slider(370, 505, 305, 20, "full x time scale");
        x_time->type(1);
        x_time->labelsize(12);
        x_time->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Slider* x_time
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(1000, 287, 275, 84, "Track analysis format");
      o->box(FL_ENGRAVED_FRAME);
      o->labeltype(FL_EMBOSSED_LABEL);
      o->labelsize(10);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
      { iso_mfm_bt = new Fl_Light_Button(1015, 305, 76, 15, "ISO MFM");
        iso_mfm_bt->labelsize(10);
        iso_mfm_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* iso_mfm_bt
      { iso_fm_bt = new Fl_Light_Button(1015, 320, 76, 15, "ISO FM");
        iso_fm_bt->labelsize(10);
        iso_fm_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* iso_fm_bt
      { amiga_mfm_bt = new Fl_Light_Button(1015, 335, 76, 15, "AMIGA MFM");
        amiga_mfm_bt->labelsize(10);
        amiga_mfm_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* amiga_mfm_bt
      { membrain_bt = new Fl_Light_Button(1099, 335, 76, 15, "MEMBRAIN");
        membrain_bt->labelsize(10);
        membrain_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* membrain_bt
      { tycom_bt = new Fl_Light_Button(1099, 320, 76, 15, "TYCOM");
        tycom_bt->labelsize(10);
        tycom_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* tycom_bt
      { eemu_bt = new Fl_Light_Button(1099, 305, 76, 15, "E-Emu");
        eemu_bt->labelsize(10);
        eemu_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* eemu_bt
      { apple2_bt = new Fl_Light_Button(1015, 350, 76, 15, "Apple II");
        apple2_bt->labelsize(10);
        apple2_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* apple2_bt
      { arburg_bt = new Fl_Light_Button(1099, 350, 76, 15, "Arburg");
        arburg_bt->labelsize(10);
        arburg_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* arburg_bt
      { aed6200p_bt = new Fl_Light_Button(1183, 305, 76, 15, "AED 6200P");
        aed6200p_bt->labelsize(10);
        aed6200p_bt->callback((Fl_Callback*)disk_infos_window_callback, (void*)(this));
      } // Fl_Light_Button* aed6200p_bt
      o->end();
    } // Fl_Group* o
    { bt_edit = new Fl_Button(1010, 465, 105, 26, "Edit tools");
      bt_edit->labelsize(10);
      bt_edit->callback((Fl_Callback*)disk_infos_window_bt_edit_callback, (void*)(this));
    } // Fl_Button* bt_edit

	Fl_Mouse_Box *m = new Fl_Mouse_Box(floppy_map_disp->x(), floppy_map_disp->y(),floppy_map_disp->w(), floppy_map_disp->h(), 0);
	m->callback(mouse_di_cb);

    window->end();
  } // Fl_Double_Window* window
}
